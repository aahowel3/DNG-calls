#list out the files you'll be working with
L1s = $(shell find . -name '*_L1.R1')
R1s = $(subst _L1.R1,_R1.fastq, $(L1s))

#check you have the right list
.PHONY : variables1
variables1:
        echo $(L1s)

.PHONY : variables2
variables2:
        echo $(R1s)


#this will output them in the same folder they came from...
.PHONY: R1_files
R1_files: $(R1s)
%_R1.fastq : %_L1.R1 %_L2.R1
        cat $^ > $@

#if you add a new rule does not appear to rerun the creation of the R1 fastq files because they have not changed 
list.txt: A_R1.fastq subfolder/B_R1.fastq
        cat $^ > $@

#possible way to put output in specific child directory - but you do have to create the directory first 
OUTDIR = ./lists
.PHONY: listout
listout: $(OUTDIR)/list.txt
$(OUTDIR)/list.txt: A_R1.fastq subfolder/B_R1.fastq
        cat $^ > $@

#What about when you want multiple things to go to the new directory?
#this does not work - ignores OUTDIR and puts output in same folder as dependency 
short_names = $(subst _R1.fastq,_R1.head.fastq, $(R1s))
OUTDIR = ./lists
.PHONY: listout
listout: $(OUTDIR)/$(short_names)

.PHONY: check
check:
        echo $(short_names)

%_R1.head.fastq: %_R1.fastq
        head -n1 $*_R1.fastq > $@
